import java.util.Stack;

public class TorreDeHanoiComPilhasERecursao {
    public static void main(String[] args) {
        int numDiscos = 5;
        Stack<Integer> origem = new Stack<>();
        Stack<Integer> destino = new Stack<>();
        Stack<Integer> auxiliar = new Stack<>();

        for (int i = numDiscos; i >= 1; i--) {
            origem.push(i);
        }

        moverDiscos(numDiscos, origem, destino, auxiliar);
    }

    public static void moverDiscos(int n, Stack<Integer> origem, Stack<Integer> destino, Stack<Integer> auxiliar) {
        if (n == 1) {
            int disco = origem.pop();
            destino.push(disco);
            System.out.println("Mover disco " + disco + " de " + origem + " para " + destino);
        } else {
            moverDiscos(n - 1, origem, auxiliar, destino);

            int disco = origem.pop();
            destino.push(disco);
            System.out.println("Mover disco " + disco + " de " + origem + " para " + destino);

            moverDiscos(n - 1, auxiliar, destino, origem);
        }
    }
}
